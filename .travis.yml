# Propriété language qui peut servir à stopper l'erreur d'exécution Travis “rakefile not found”
language: generic 
sudo: required
services:
  - docker

# Build du projet client en vue des tests
before_install:
  - docker build -t mat360/react-test -f ./client/Dockerfile.dev ./client

# Exécution des tests du projet client avec une fin d'exécution (option -e CI=true)
script:
  - docker run -e CI=true mat360/react-test npm test

# Si l'exécution des tests est OK (exit code 0)
after_success:
  # Création des images Docker de production
  # Utilisation par défaut du fichier Dockerfile donc pas besoin du flag -f
  # Mais on précise toujours bien le contexte d'exécution (./client, ./nginx, ./server, ./worker)
  - docker build -t mat360/multi-client ./client
  - docker build -t mat360/multi-nginx ./nginx
  - docker build -t mat360/multi-server ./server
  - docker build -t mat360/multi-worker ./worker

  # Login to the docker CLI sur Travis en utilisant les paramètres DOCKER_PASSWORD et DOCKER_ID
  # sauvés au niveau du projet dans Travis afin de ne pas les laisser en clair dans un projet publique
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_ID" --password-stdin

  # Pousser les images vers DockerHub
  - docker push mat360/multi-client
  - docker push mat360/multi-nginx
  - docker push mat360/multi-server
  - docker push mat360/multi-worker

deploy:
  provider: elasticbeanstalk
  region: 'eu-west-3'
  app: 'multi-docker'
  env: 'MultiDocker-env'
  bucket_name: 'elasticbeanstalk-eu-west-3-654654496153'
  bucket_path: 'docker-multi'
  on:
    branch: master
  access_key_id: $AWS_ACCESS_KEY
  secret_access_key: $AWS_SECRET_KEY
